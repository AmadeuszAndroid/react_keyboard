{"version":3,"sources":["App.tsx","index.tsx"],"names":["keyUp","App","state","pressedKey","document","addEventListener","event","setState","key","removeEventListener","this","message","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAGMA,EAAQ,QAEDC,EAAb,4MACEC,MAAQ,CACNC,WALa,IAGjB,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBAAiBL,GAAO,SAACM,GAChC,EAAKC,SAAS,CAAEJ,WAAYG,EAAME,WAPxC,kCAWE,WAAwB,IAAD,OACrBJ,SAASK,oBAAoBT,GAAO,WAClC,EAAKO,SAAS,CAAEJ,WAhBL,UAGjB,oBAiBE,WACE,IAAQA,EAAeO,KAAKR,MAApBC,WAEFQ,EAAUR,EAAU,mCACMA,EADN,KAEtB,0BAEJ,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BD,UA1BrC,GAAyBE,IAAMC,W,MCA/BC,IAASC,OACP,cAAC,EAAD,IACAZ,SAASa,eAAe,W","file":"static/js/main.bdaf19f8.chunk.js","sourcesContent":["import React from 'react';\n\nconst emptyKey = '';\nconst keyUp = 'keyup';\n\nexport class App extends React.Component {\n  state = {\n    pressedKey: emptyKey,\n  };\n\n  componentDidMount() {\n    document.addEventListener(keyUp, (event: KeyboardEvent) => {\n      this.setState({ pressedKey: event.key });\n    });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(keyUp, () => {\n      this.setState({ pressedKey: emptyKey });\n    });\n  }\n\n  render() {\n    const { pressedKey } = this.state;\n\n    const message = pressedKey\n      ? `The last pressed key is [${pressedKey}]`\n      : 'Nothing was pressed yet';\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{message}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}